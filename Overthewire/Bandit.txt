bandit 0>1:
cat readme
boJ9jbbUNNfktd78OOpsqOltutMc3MY1

---

bandit 1>2:
file name is -
cat ./-
CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

---

bandit 2>3:
called " spaces in this filename "
cat spaces\ in\ this\ filename  - cat s > tab complete also address the spaces
UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

---

bandit 3>4:
hidden file in the inhere directory
cd inhere/
ls -la
cat .hidden
pIwrPrtPN36QITSp3EQaw936yaFoFgAB

---

bandit 4>5:
stored in the only human-readable file in the inhere directory
cd inhere/
ls -la
file ./-*
./-file07: ASCII text
cat ./-file07
koReBOKuIDDepwhWk7jZC0RTdopnAYKh

---

bandit 5>6:
file somewhere under the inhere directory and has all of the following properties:
    human-readable
    1033 bytes in size
    not executable

find -readable -size 1033c ! -executable
DXjZPULLxYr17uwoI01bNLQbtFemEgo7

---

bandit 6>7:
stored somewhere on the server and has all of the following properties:
    owned by user bandit7
    owned by group bandit6
    33 bytes in size

find / -size 33c -user bandit7 -group bandit6 2>/dev/null
cat /var/lib/dpkg/info/bandit7.password
HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

---

bandit 7>8:
file data.txt next to the word millionth
cat data.txt | grep millionth
cvX2JJa4CFALtqS87jk27qwqGhBM9plV

---

bandit8>9:
stored in the file data.txt and is the only line of text that occurs only once
cat data.txt | sort -n| uniq -u
UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

---

bandit 9>10:
stored in the file data.txt in one of the few human-readable strings, beginning with several ‘=’ characters.
strings data.txt | grep ==
truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk

---

bandit10>11:
stored in the file data.txt, which contains base64 encoded data
cat data.txt | base64 -d
The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

---

bandit11>12:
stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions -  a rot13
cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m'     
The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu

tr translates one character set to another!

---

bandit12>13:
stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed
xxd -r data.txt > data1
mv data1 data1.gz - renaming it with the .gz gzip extension 
gzip -d data1.gz
mv data1 data2.bz2
bzip2 -d data.txt.bz2
mv data2 data3.gz
gzip -d data3.gz
mv data3 data4.tar
tar -xf data4.tar
mv data5.bin data6.tar
tar -xf data6.tar 
mv data6.bin data7.bz2
bzip2 -d data7.bz2 
mv data7 data8.tar
tar -xf data8.tar
mv data8.bin data9.gz
gzip -d data9.gz 
data9: ASCII text woooo!
cat data9
The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL

---

bandit13>14:
tored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. \ Note: localhost is a hostname that refers to the machine you are working on
ssh -i sshkey.private bandit14@localhost
cat /etc/bandit_pass/bandit14
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e

---

bandit14>15:
The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost
nc localhost 30000 
BfMYroe26WYalil77FoDi9qh59eK5xNr

---

bandit15>16:
The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption
openssl s_client -host localhost -port 30001 -ign_eof 
you are then connected to localhost:30001 using SSL encryption - -ign_eof is used to get rid of heartbeating?
type in last levels password in and results in flag
cluFn7wTiGryunymYOu4RcffSxQluehd

---

bandit16>17:
The credentials for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t. 
There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.

nmap localhost -p 31000-32000 -A -v
openssl s_client -host localhost -port 31790 > get given an rsa key!
copy and paste the rsa key into a file 
set permissions to 400 
ssh -i key bandit17@localhost > logs you into level 17!

---

bandit17>18:
There are 2 files in the homedirectory: passwords.old and passwords.new. 
The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new

diff passwords.old passwords.new 
output:
42c42
< 6vcSC74ROI95NqkKaeEC2ABVMDX9TyUr
---
> kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd - password?

---

bandit18>19:

The password for the next level is stored in a file readme in the homedirectory. 
Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.
ssh -t bandit18@bandit.labs.overthewire.org -p 2220 /bin/sh
cat readme
IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x

---

bandit19>20:

To gain access to the next level, you should use the setuid binary in the homedirectory. Execute it without arguments to find out how to use it. 
The password for this level can be found in the usual place (/etc/bandit_pass), after you have used the setuid binary.
./bandit20-do cat /etc/bandit_pass/bandit20
GbKksEFF4yrVs6il55v6gwY5aVje5f0j

---

bandit20>21:







